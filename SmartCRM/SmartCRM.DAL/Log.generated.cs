#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using SmartCRM.DAL;

namespace SmartCRM.DAL	
{
	[Table("logs")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private uint _userID;
		[Column("UserID", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_userID")]
		public virtual uint UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if(this._userID != value)
				{
					this.OnPropertyChanging("UserID");
					this._userID = value;
					this.OnPropertyChanged("UserID");
				}
			}
		}
		
		private uint _logID;
		[Column("LogID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_logID")]
		public virtual uint LogID
		{
			get
			{
				return this._logID;
			}
			set
			{
				if(this._logID != value)
				{
					this.OnPropertyChanging("LogID");
					this._logID = value;
					this.OnPropertyChanged("LogID");
				}
			}
		}
		
		private string _logDescription;
		[Column("LogDescription", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_logDescription")]
		public virtual string LogDescription
		{
			get
			{
				return this._logDescription;
			}
			set
			{
				if(this._logDescription != value)
				{
					this.OnPropertyChanging("LogDescription");
					this._logDescription = value;
					this.OnPropertyChanged("LogDescription");
				}
			}
		}
		
		private DateTime _logCreateDate;
		[Column("LogCreateDate", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_logCreateDate")]
		public virtual DateTime LogCreateDate
		{
			get
			{
				return this._logCreateDate;
			}
			set
			{
				if(this._logCreateDate != value)
				{
					this.OnPropertyChanging("LogCreateDate");
					this._logCreateDate = value;
					this.OnPropertyChanged("LogCreateDate");
				}
			}
		}
		
		private byte _logActionType;
		[Column("LogActionType", OpenAccessType = OpenAccessType.Byte, Length = 0, Scale = 0, SqlType = "tinyint unsigned")]
		[Storage("_logActionType")]
		public virtual byte LogActionType
		{
			get
			{
				return this._logActionType;
			}
			set
			{
				if(this._logActionType != value)
				{
					this.OnPropertyChanging("LogActionType");
					this._logActionType = value;
					this.OnPropertyChanged("LogActionType");
				}
			}
		}
		
		private string _logActionDetail;
		[Column("LogActionDetail", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_logActionDetail")]
		public virtual string LogActionDetail
		{
			get
			{
				return this._logActionDetail;
			}
			set
			{
				if(this._logActionDetail != value)
				{
					this.OnPropertyChanging("LogActionDetail");
					this._logActionDetail = value;
					this.OnPropertyChanged("LogActionDetail");
				}
			}
		}
		
		private User _user;
		[ForeignKeyAssociation(ConstraintName = "FK_logs_users_UserID", SharedFields = "UserID", TargetFields = "UserID")]
		[Storage("_user")]
		public virtual User User
		{
			get
			{
				return this._user;
			}
			set
			{
				if(this._user != value)
				{
					this.OnPropertyChanging("User");
					this._user = value;
					this.OnPropertyChanged("User");
				}
			}
		}
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
