#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using SmartCRM.DAL;

namespace SmartCRM.DAL	
{
	[Table("const_value_types")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class ConstValueType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private int _valueTypePosition;
		[Column("ValueTypePosition", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_valueTypePosition")]
		public virtual int ValueTypePosition
		{
			get
			{
				return this._valueTypePosition;
			}
			set
			{
				if(this._valueTypePosition != value)
				{
					this.OnPropertyChanging("ValueTypePosition");
					this._valueTypePosition = value;
					this.OnPropertyChanged("ValueTypePosition");
				}
			}
		}
		
		private string _valueTypeName;
		[Column("ValueTypeName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_valueTypeName")]
		public virtual string ValueTypeName
		{
			get
			{
				return this._valueTypeName;
			}
			set
			{
				if(this._valueTypeName != value)
				{
					this.OnPropertyChanging("ValueTypeName");
					this._valueTypeName = value;
					this.OnPropertyChanged("ValueTypeName");
				}
			}
		}
		
		private uint _valueTypeID;
		[Column("ValueTypeID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_valueTypeID")]
		public virtual uint ValueTypeID
		{
			get
			{
				return this._valueTypeID;
			}
			set
			{
				if(this._valueTypeID != value)
				{
					this.OnPropertyChanging("ValueTypeID");
					this._valueTypeID = value;
					this.OnPropertyChanged("ValueTypeID");
				}
			}
		}
		
		private IList<CompaniesValue> _companiesValues = new List<CompaniesValue>();
		[Collection(InverseProperty = "ConstValueType")]
		[Storage("_companiesValues")]
		public virtual IList<CompaniesValue> CompaniesValues
		{
			get
			{
				return this._companiesValues;
			}
		}
		
		#region INotifyPropertyChanging members
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanging(string propertyName)
		{
			if(this.PropertyChanging != null)
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		#endregion
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
